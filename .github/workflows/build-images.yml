name: Build Images

on:
  workflow_call:
    inputs:
      should_skip:
        required: false
        type: string
      images:
        default: '[]'
        required: false
        type: string
      push:
        default: false
        required: false
        type: boolean
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build:
    name: Build
    if: inputs.should_skip != 'true' && inputs.images != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJSON(inputs.images) }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: '{{defaultContext}}:${{ matrix.context }}'
          push: ${{ inputs.push }}
          tags: paescuj/${{ matrix.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  result:
    name: Result
    if: inputs.should_skip != 'true' && inputs.images != '[]' && always()
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Mark result as failed
        if: needs.build.result != 'success'
        run: exit 1
