# Continuous Integration
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pre_check:
    name: Pre-Check
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      skipped_by: ${{ steps.skip_check.outputs.skipped_by }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - name: Check for skippable jobs
        id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        continue-on-error: true
        with:
          cancel_others: 'true'
          paths_ignore: '["**/*.md"]'
          paths_filter: |
            web:
              paths:
                - 'web/**/*'
            directus:
              paths:
                - 'directus/**/*'
            chatwoot:
              paths:
                - 'chatwoot/**/*'

      - name: Store paths_result output
        if: steps.skip_check.outputs.paths_result != '{}'
        run: echo '${{ steps.skip_check.outputs.paths_result }}' > paths_result

      - name: Upload paths_result result
        if: steps.skip_check.outputs.paths_result != '{}'
        uses: actions/upload-artifact@v2
        with:
          name: paths_result
          path: paths_result

  map_images:
    name: Map Images
    needs: pre_check
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.map_images.outputs.result }}
    steps:
      - name: Map images
        uses: actions/github-script@v5
        id: map_images
        env:
          PATHS_RESULT: ${{ needs.pre_check.outputs.paths_result }}
        with:
          script: |
            const images = [];
            const map = {
              web: {
                name: 'jaa-web',
                context: 'web'
              },
              directus: {
                name: 'jaa-directus',
                context: 'directus'
              },
              chatwoot: {
                name: 'jaa-chatwoot',
                context: 'chatwoot'
              },
            };
            let paths_result;

            const skipped_by = ${{ toJSON(needs) }}.pre_check.outputs.skipped_by
            if (context.eventName === 'push' && skipped_by.event && skipped_by.event !== 'push') {
             try {
                const { data: { artifacts } } = await github.rest.actions.listWorkflowRunArtifacts({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: skipped_by.runId
                });
                const artifact = artifacts.find((artifact) => artifact.name === 'paths_result')
                const { data } = await github.rest.actions.downloadArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                  archive_format: 'zip'
                });
                const { appendFileSync } = require('fs');
                appendFileSync('paths_result.zip', Buffer.from(data));
                await exec.exec('unzip', ['paths_result.zip']);
                paths_result = JSON.parse(fs.readFileSync('paths_result').toString());
              } catch (error) {
                core.warn(error)
              }
            } else {
              paths_result = JSON.parse(process.env.PATHS_RESULT);
            }

            if (paths_result) {
              for (const filter in paths_result) {
                if (!paths_result[filter].should_skip && filter in map) {
                  images.push(map[filter]);
                }
              }
            } else {
              for (const name in map) {
                images.push(map[name]);
              }
            }

            return images;

  lint:
    name: Lint
    needs: pre_check
    uses: paescuj/jaa/.github/workflows/lint.yml@main
    with:
      should_skip: ${{ needs.pre_check.outputs.should_skip == 'true' || fromJSON(needs.pre_check.outputs.paths_result).web.should_skip }}

  build_images:
    name: Build Images
    needs: [pre_check, map_images]
    uses: paescuj/jaa/.github/workflows/build-images.yml@main
    with:
      should_skip: ${{ needs.pre_check.outputs.should_skip }}
      images: ${{ needs.map_images.outputs.images }}
      push: ${{ github.event_name == 'push' }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
